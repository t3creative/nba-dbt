version: 2

models:
  - name: feat_player__scoring_features
    description: |
      Comprehensive player scoring feature layer that combines derived metrics, contextual projections,
      interior scoring patterns, and team interaction effects into ML-ready features.
      
      This model serves as the definitive scoring feature source for ML prediction pipelines,
      ensuring temporal safety and zero data leakage through point-in-time correct transformations.
      
      **Key Feature Categories:**
      - Historical Performance: 10-game rolling averages and trend analysis
      - Team Context: Pace, usage, and team form multipliers
      - Interior Scoring: Paint vs perimeter specialization patterns
      - Adaptability: Deviation from baseline patterns vs specific opponents
      - Composite Indicators: Multi-dimensional performance metrics
      
      **Temporal Safety:** All features use lagged team context and exclude current game performance.
      **Grain:** One record per player per game
      **Update Frequency:** Daily incremental processing
      **ML Safety:** Validated for zero future information leakage
      
    config:
      schema: features
      materialized: incremental
      partition_by: 
        field: game_date
        data_type: date
        granularity: month
    
    columns:
      # === IDENTIFIERS ===
      - name: player_game_key
        description: "Unique identifier for player-game combination (MD5 hash)"
        tests:
          - unique
          - not_null
      
      - name: player_id
        description: "Player unique identifier"
        tests:
          - not_null
      
      - name: player_name
        description: "Player display name"
        tests:
          - not_null
      
      - name: game_id
        description: "Game unique identifier"
        tests:
          - not_null
      
      - name: team_id
        description: "Team unique identifier"
        tests:
          - not_null
      
      - name: season_year
        description: "Season year (e.g., '2023-24')"
        tests:
          - not_null
      
      - name: game_date
        description: "Date of the game"
        tests:
          - not_null
      
      - name: home_away
        description: "Home or Away indicator"
        tests:
          - accepted_values:
              values: ['HOME', 'AWAY']
      
      - name: position
        description: "Player position (G, F, C)"
        tests:
          - accepted_values:
              values: ['G', 'F', 'C']
      
      - name: opponent_id
        description: "Opposing team identifier"
      
      # === FOUNDATIONAL PERFORMANCE METRICS ===
      - name: pts_roll_10g_avg
        description: "10-game rolling average points per game"
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100
      
      - name: ts_pct_roll_10g_avg
        description: "10-game rolling average true shooting percentage"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: usage_pct_roll_10g_avg
        description: "10-game rolling average usage percentage"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: eff_fg_pct_roll_10g_avg
        description: "10-game rolling average effective field goal percentage"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      # === ADVANCED EFFICIENCY METRICS ===
      - name: scoring_efficiency_composite_roll_10g
        description: "Composite efficiency metric combining TS% and eFG% (60/40 weighted)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: usage_weighted_ts_roll_10g
        description: "True shooting percentage weighted by usage rate"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: points_opportunity_ratio_roll_10g
        description: "Points per touch opportunity (points per possession)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 10
      
      - name: composite_efficiency_reliability
        description: "Multi-metric efficiency composite (efficiency + usage + opportunity)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 5
      
      # === SHOT CREATION METRICS ===
      - name: shot_creation_index_roll_10g
        description: "Index measuring self-created shot attempts and team shot share"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 10
      
      - name: self_created_scoring_rate_per_min_roll_10g
        description: "Rate of unassisted field goals made per minute played"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 2
      
      - name: shooting_volume_per_min_roll_10g
        description: "Shot attempts (FGA + 0.44*FTA) per minute of play"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 2
      
      - name: free_throw_generation_aggressiveness_roll_10g
        description: "Free throw attempts per field goal attempt ratio"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 2
      
      # === DEFENSIVE PRESSURE METRICS ===
      - name: contested_vs_uncontested_fg_pct_diff_roll_10g
        description: "Difference between contested and uncontested field goal percentages"
        tests:
          - dbt_utils.accepted_range:
              min_value: -0.5
              max_value: 0.5
      
      - name: contested_fg_makes_per_minute_roll_10g
        description: "Contested field goals made per minute of play"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: pressure_performance_tier
        description: "Categorical rating of performance under defensive pressure"
        tests:
          - accepted_values:
              values: ['HIGH_PRESSURE_PERFORMER', 'PRESSURE_RESILIENT', 'PRESSURE_SENSITIVE', 'PRESSURE_NEUTRAL']
      
      # === SCORING VERSATILITY METRICS ===
      - name: scoring_versatility_ratio_roll_10g
        description: "Measure of balanced scoring across 2PT, 3PT, and FT (1 = perfect balance)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: three_pt_value_efficiency_index_roll_10g
        description: "Three-point attempt rate weighted by three-point percentage"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: paint_reliance_index_roll_10g
        description: "Paint scoring percentage weighted by 2PT attempt rate"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: scoring_profile_balance_3pt_vs_paint_roll_10g
        description: "Balance between three-point and paint scoring (-1 to 1 scale)"
        tests:
          - dbt_utils.accepted_range:
              min_value: -1
              max_value: 1
      
      - name: scoring_archetype
        description: "Player's primary scoring style classification"
        tests:
          - accepted_values:
              values: ['INTERIOR_DOMINANT', 'PERIMETER_FOCUSED', 'BALANCED_SCORER', 'SITUATIONAL_SCORER']
      
      # === TEAM CONTEXT METRICS ===
      - name: team_l5_pace
        description: "Team's 5-game lagged pace (possessions per game)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 80
              max_value: 120
      
      - name: team_l5_off_rating
        description: "Team's 5-game lagged offensive rating (points per 100 possessions)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 90
              max_value: 130
      
      - name: team_form
        description: "Team's recent performance form classification"
        tests:
          - accepted_values:
              values: ['VERY_HOT', 'HOT', 'NEUTRAL', 'COLD', 'VERY_COLD']
      
      - name: player_offensive_role
        description: "Player's role within team offensive structure"
        tests:
          - accepted_values:
              values: ['PRIMARY_OPTION', 'SECONDARY_OPTION', 'SUPPORTING_ROLE']
      
      - name: player_team_style_fit_score
        description: "Player-team style compatibility score (1-5 scale)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 5
      
      # === CONTEXT MULTIPLIERS ===
      - name: pace_multiplier
        description: "Adjustment factor based on team pace impact on player"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0.5
              max_value: 1.5
      
      - name: usage_multiplier
        description: "Adjustment factor based on usage opportunity in team context"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0.5
              max_value: 1.5
      
      - name: combined_context_multiplier
        description: "Product of all context multipliers (combined team impact)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0.3
              max_value: 2.0
      
      - name: context_sensitivity_tier
        description: "Player's sensitivity to team context changes"
        tests:
          - accepted_values:
              values: ['HIGH_CONTEXT_BOOST', 'MODERATE_CONTEXT_BOOST', 'CONTEXT_NEUTRAL', 'MINOR_CONTEXT_LIMITATION', 'CONTEXT_LIMITATION']
      
      # === PROJECTIONS ===
      - name: team_adjusted_pts_projection
        description: "Points projection adjusted for current team context"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 80
      
      - name: projection_vs_baseline_pts_diff
        description: "Absolute difference between team-adjusted projection and rolling average"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 30
      
      - name: projection_accuracy_ratio
        description: "Relative difference between projection and baseline (percentage)"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 2
      
      # === INTERIOR SCORING PATTERNS ===
      - name: pct_pts_in_paint
        description: "Percentage of points scored in the paint"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: paint_scoring_reliance_deviation
        description: "Deviation from season average paint scoring reliance"
        tests:
          - dbt_utils.accepted_range:
              min_value: -1
              max_value: 1
      
      - name: matchup_adaptability_index
        description: "Combined measure of interior scoring adaptability vs opponents"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 3
      
      # === TEAM CONTRIBUTION ===
      - name: pct_of_team_pts
        description: "Player's percentage of team's total points"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
      
      - name: efficiency_vs_team_avg
        description: "Player efficiency relative to team average"
        tests:
          - accepted_values:
              values: ['ABOVE_TEAM_AVG', 'NEAR_TEAM_AVG', 'BELOW_TEAM_AVG']
      
      - name: team_offensive_impact_magnitude
        description: "Overall measure of player's impact on team offense"
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 5
      
      # === COMPOSITE INDICATORS ===
      - name: role_consistency_indicator
        description: "Alignment between derived role metrics and team context role"
        tests:
          - accepted_values:
              values: ['CONSISTENT_PRIMARY', 'CONSISTENT_SECONDARY', 'CONSISTENT_SUPPORT', 'ROLE_MISMATCH']
      
      - name: created_at
        description: "Timestamp when record was created"
        tests:
          - not_null
      
      - name: updated_at
        description: "Timestamp when record was last updated"
        tests:
          - not_null

    # === MODEL-LEVEL TESTS ===
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - player_id
            - game_id
      
      # Test temporal integrity - no future data leakage
      - dbt_utils.expression_is_true:
          expression: "created_at >= game_date"
          config:
            severity: error
      
      # Test that projections are reasonable vs baseline performance
      - dbt_utils.expression_is_true:
          expression: "projection_accuracy_ratio <= 1.0 OR pts_roll_10g_avg < 5"
          config:
            severity: warn
      
      # Test that multipliers are within expected bounds
      - dbt_utils.expression_is_true:
          expression: "combined_context_multiplier BETWEEN 0.2 AND 3.0"
          config:
            severity: error
      
      # Test data recency for incremental runs
      - dbt_utils.recency:
          datepart: day
          field: game_date
          interval: 30
          config:
            severity: warn

# === MACRO TESTS FOR FEATURE VALIDATION ===
sources:
  - name: features
    description: "Feature layer tables"
    tables:
      - name: feat_player__scoring_features
        tests:
          # Custom test for ML feature completeness
          - dbt_utils.expression_is_true:
              expression: "
                pts_roll_10g_avg IS NOT NULL AND
                ts_pct_roll_10g_avg IS NOT NULL AND
                usage_pct_roll_10g_avg IS NOT NULL AND
                team_adjusted_pts_projection IS NOT NULL
              "
              config:
                severity: error
                store_failures: true
          
          # Test for reasonable feature distributions
          - dbt_utils.expression_is_true:
              expression: "
                scoring_efficiency_composite_roll_10g BETWEEN 0.3 AND 0.8 OR
                pts_roll_10g_avg < 5
              "
              config:
                severity: warn